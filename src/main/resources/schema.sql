CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(50) NOT NULL,
    login varchar(50) NOT NULL,
    name varchar(100),
    birthday date
);

CREATE TABLE IF NOT EXISTS film_mpa (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name varchar(10),
    CONSTRAINT film_mpa_fk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200),
    description varchar(250),
    release_date date,
    duration integer,
    mpa_id integer,
    CONSTRAINT films_fk FOREIGN KEY (mpa_id) REFERENCES film_mpa (id)
);

CREATE TABLE IF NOT EXISTS films_likes (
    film_id integer,
    likes_id integer,
    CONSTRAINT films_likes_fk1 FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    CONSTRAINT films_likes_fk2 FOREIGN KEY (likes_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id integer,
    genre_id integer,
    CONSTRAINT film_genre_fk1 FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    CONSTRAINT film_genre_fk2 FOREIGN KEY (genre_id) REFERENCES genre (id)
);

CREATE TABLE IF NOT EXISTS user_friend (
    user_id integer,
    friend_id integer,
    friendship boolean DEFAULT false,
    CONSTRAINT user_friend_fk1 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT user_friend_fk2 FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE
);







